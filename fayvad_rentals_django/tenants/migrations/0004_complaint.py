# Generated by Django 4.2.7 on 2025-10-22 07:27

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("properties", "0003_alter_location_manager"),
        ("accounts", "0003_update_existing_full_names"),
        ("tenants", "0003_tenant_compliance_status_changed_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Complaint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "complaint_number",
                    models.CharField(
                        blank=True,
                        help_text="Unique complaint reference number",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("noise", "Noise Complaint"),
                            ("cleanliness", "Cleanliness Issue"),
                            ("maintenance", "Maintenance Related"),
                            ("neighbor_dispute", "Neighbor Dispute"),
                            ("facility_issue", "Facility/Equipment Issue"),
                            ("billing_dispute", "Billing Dispute"),
                            ("other", "Other"),
                        ],
                        help_text="Complaint category",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        help_text="Complaint priority level",
                        max_length=10,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Brief complaint subject", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed complaint description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        help_text="Current complaint status",
                        max_length=15,
                    ),
                ),
                (
                    "resolution",
                    models.TextField(
                        blank=True,
                        help_text="Resolution details and actions taken",
                        null=True,
                    ),
                ),
                (
                    "resolution_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the complaint was resolved",
                        null=True,
                    ),
                ),
                (
                    "priority_changed",
                    models.DateTimeField(
                        blank=True,
                        help_text="When priority was last changed",
                        null=True,
                    ),
                ),
                (
                    "escalation_deadline",
                    models.DateTimeField(
                        blank=True,
                        help_text="Deadline for resolution based on priority",
                        null=True,
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False, help_text="Whether the complaint is anonymous"
                    ),
                ),
                (
                    "contact_preference",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("in_person", "In Person"),
                            ("no_contact", "No Further Contact"),
                        ],
                        default="email",
                        help_text="Preferred contact method for updates",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Staff member assigned to handle the complaint",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_complaints",
                        to="accounts.staff",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        help_text="Room related to the complaint (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="complaints",
                        to="properties.room",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant filing the complaint",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="complaints",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["complaint_number"],
                        name="tenants_com_complai_540956_idx",
                    ),
                    models.Index(
                        fields=["tenant"], name="tenants_com_tenant__08909c_idx"
                    ),
                    models.Index(
                        fields=["status"], name="tenants_com_status_06bf07_idx"
                    ),
                    models.Index(
                        fields=["priority"], name="tenants_com_priorit_3ebae6_idx"
                    ),
                    models.Index(
                        fields=["category"], name="tenants_com_categor_222307_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="tenants_com_created_cbbd1e_idx"
                    ),
                ],
            },
        ),
    ]
