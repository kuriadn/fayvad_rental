# Generated by Django 5.1.2 on 2025-09-25 12:14

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("properties", "0001_initial"),
        ("rentals", "0001_initial"),
        ("tenants", "0002_tenant_current_location"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Document title or name", max_length=200
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("contract", "Contract"),
                            ("agreement", "Agreement"),
                            ("id_document", "ID Document"),
                            ("receipt", "Receipt"),
                            ("invoice", "Invoice"),
                            ("other", "Other"),
                        ],
                        help_text="Type of document",
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        help_text="Uploaded document file",
                        null=True,
                        upload_to="documents/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                [
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "filename",
                    models.CharField(
                        blank=True,
                        help_text="Original filename",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True,
                        help_text="MIME type of the file",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        help_text="Document status",
                        max_length=20,
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False, help_text="Whether this document is required"
                    ),
                ),
                (
                    "reference_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this document is referenced",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Document description or notes", null=True
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Tags for document categorization",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0", help_text="Document version", max_length=20
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether document is publicly accessible",
                    ),
                ),
                (
                    "access_permissions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Access permissions for the document",
                    ),
                ),
                (
                    "reviewed_by",
                    models.CharField(
                        blank=True,
                        help_text="Person who reviewed the document",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "reviewed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when document was reviewed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rental_agreement",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated rental agreement",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="rentals.rentalagreement",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated room",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="properties.room",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated tenant",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who uploaded the document",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["title"], name="documents_d_title_ccf306_idx"),
                    models.Index(
                        fields=["document_type"], name="documents_d_documen_40c475_idx"
                    ),
                    models.Index(
                        fields=["status"], name="documents_d_status_07369e_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="documents_d_created_3b0a51_idx"
                    ),
                    models.Index(
                        fields=["tenant"], name="documents_d_tenant__c0b07f_idx"
                    ),
                    models.Index(
                        fields=["rental_agreement"],
                        name="documents_d_rental__8ee056_idx",
                    ),
                    models.Index(
                        fields=["room"], name="documents_d_room_id_4e744e_idx"
                    ),
                    models.Index(
                        fields=["uploaded_by"], name="documents_d_uploade_6455fb_idx"
                    ),
                ],
            },
        ),
    ]
