# Latest Docker Compose v2.24+ syntax (September 2025)
name: fayvad_rentals
services:
  # Redis for caching and sessions - Latest stable Redis 7.4
  redis:
    image: redis:7.4-alpine
    container_name: fayvad-rental-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - fayvad-network

  # Django application with latest Python 3.12
  web:
    image: fayvad_rentals
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fayvad-rental-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this-in-production-123456789}
      - DJANGO_SETTINGS_MODULE=fayvad_rentals.settings
      - DB_NAME=fayvad_rental_db  # Main rental management database
      - DB_USER=${DB_USER:-fayvad}
      - DB_PASSWORD=${DB_PASSWORD:-MeMiMo@0207}
      - DB_HOST=${DB_HOST:-172.28.115.234}
      - DB_PORT=${DB_PORT:-5432}
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DJANGO_LOG_LEVEL=INFO
    volumes:
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fayvad-network

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:1.27-alpine
    container_name: fayvad-rental-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
    depends_on:
      - web
    networks:
      - fayvad-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  fayvad-network:
    driver: bridge
    name: fayvad-network
