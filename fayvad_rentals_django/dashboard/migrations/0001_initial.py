# Generated by Django 5.1.2 on 2025-09-25 12:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KPI",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="KPI name", max_length=200)),
                (
                    "code",
                    models.CharField(
                        help_text="Unique KPI code for identification",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="KPI description", null=True
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("count", "Count"),
                            ("sum", "Sum"),
                            ("average", "Average"),
                            ("percentage", "Percentage"),
                            ("trend", "Trend"),
                        ],
                        default="count",
                        help_text="Type of metric calculation",
                        max_length=20,
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        help_text="Django model name (e.g., 'tenants.Tenant')",
                        max_length=100,
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        blank=True,
                        help_text="Field name for aggregation (optional)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Filters to apply to the query",
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True,
                        help_text="Unit of measurement (e.g., 'KES', '%', 'count')",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "format_string",
                    models.CharField(
                        default="{value}",
                        help_text="Format string for displaying the value",
                        max_length=100,
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Target value for this KPI",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "warning_threshold",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Warning threshold value",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "critical_threshold",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Critical threshold value",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this KPI is active"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="KPI category for grouping",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "dashboard_types",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Dashboard types where this KPI should appear",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(fields=["code"], name="dashboard_k_code_a526f0_idx"),
                    models.Index(
                        fields=["metric_type"], name="dashboard_k_metric__bcbc55_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="dashboard_k_is_acti_b9b1e2_idx"
                    ),
                    models.Index(
                        fields=["category"], name="dashboard_k_categor_6c5739_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Dashboard name", max_length=200)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("overview", "Overview"),
                            ("financial", "Financial"),
                            ("occupancy", "Occupancy"),
                            ("maintenance", "Maintenance"),
                            ("tenant", "Tenant"),
                            ("property", "Property"),
                        ],
                        default="overview",
                        help_text="Type of dashboard",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Dashboard description", null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this dashboard is active"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Whether this is the default dashboard"
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Dashboard configuration (widgets, layout, etc.)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created the dashboard",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["dashboard_type"], name="dashboard_d_dashboa_b59aa0_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="dashboard_d_is_acti_84ce71_idx"
                    ),
                    models.Index(
                        fields=["is_default"], name="dashboard_d_is_defa_847543_idx"
                    ),
                    models.Index(
                        fields=["created_by"], name="dashboard_d_created_d582e0_idx"
                    ),
                ],
            },
        ),
    ]
