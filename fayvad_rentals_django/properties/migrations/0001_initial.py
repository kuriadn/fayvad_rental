# Generated by Django 5.1.2 on 2025-09-25 11:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tenants", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Location name (e.g., 'Building A', 'Campus Complex')",
                        max_length=200,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique location code (e.g., 'BLDA', 'CAMPUS')",
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Code must be uppercase letters and numbers only",
                                regex="^[A-Z0-9]+$",
                            )
                        ],
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="Full address of the location", null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City where location is situated",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this location is active"
                    ),
                ),
                (
                    "setup_complete",
                    models.BooleanField(
                        default=False, help_text="Whether location setup is complete"
                    ),
                ),
                (
                    "setup_date",
                    models.DateTimeField(
                        blank=True, help_text="When setup was completed", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        help_text="Location manager/caretaker",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_locations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "room_number",
                    models.CharField(
                        help_text="Room number or identifier", max_length=20
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("single", "Single Room"),
                            ("double", "Double Room"),
                            ("studio", "Studio"),
                            ("one_bedroom", "1 Bedroom"),
                            ("two_bedroom", "2 Bedroom"),
                            ("shared", "Shared Room"),
                        ],
                        default="single",
                        help_text="Type of room",
                        max_length=20,
                    ),
                ),
                (
                    "floor",
                    models.IntegerField(
                        blank=True, help_text="Floor number", null=True
                    ),
                ),
                (
                    "capacity",
                    models.IntegerField(default=1, help_text="Maximum occupancy"),
                ),
                (
                    "rent_amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Monthly rent amount", max_digits=10
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Security deposit amount",
                        max_digits=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("occupied", "Occupied"),
                            ("maintenance", "Under Maintenance"),
                            ("reserved", "Reserved"),
                        ],
                        default="available",
                        help_text="Current room status",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Room description and amenities",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_tenant",
                    models.OneToOneField(
                        blank=True,
                        help_text="Currently assigned tenant",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_room",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        help_text="Location/building this room belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="properties.location",
                    ),
                ),
            ],
            options={
                "ordering": ["location", "room_number"],
            },
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(fields=["code"], name="properties__code_309c99_idx"),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["is_active"], name="properties__is_acti_18998e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["setup_complete"], name="properties__setup_c_341fc0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(
                fields=["location", "status"], name="properties__locatio_4c57ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(fields=["status"], name="properties__status_2b3c4f_idx"),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(
                fields=["room_type"], name="properties__room_ty_58a555_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="room",
            unique_together={("location", "room_number")},
        ),
    ]
